name: Run T4L Content Pipeline

on:
  schedule:
    - cron: '20 0,8-23 * * *'   # 00:20, 08:20â€“23:20 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 55
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      PYTHONPATH: .
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PLAYWRIGHT_VERSION: "1.51.0"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node (for Playwright driver)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # remove this line if Playwright is already pinned in requirements.txt
          pip install "playwright==${PLAYWRIGHT_VERSION}"

      - name: Determine Playwright version (for cache)
        run: |
          PV=$(python -c "import importlib.metadata as m; print(m.version('playwright'))")
          echo "Playwright $PV"
          echo "PW_VERSION=$PV" >> "$GITHUB_ENV"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PW_VERSION }}

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps chromium

      - name: Print runtime versions
        run: |
          node -v
          python -c "import sys; print('py', sys.version)"
          python -c "import importlib.metadata as m; print('playwright', m.version('playwright'))"

      - name: Run article cleanup pipeline
        run: python scripts/cleanup_pipeline.py

      - name: Run article cluster pipeline
        run: python scripts/cluster_pipeline.py

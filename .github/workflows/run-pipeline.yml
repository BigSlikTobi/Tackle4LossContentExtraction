name: Run T4L Content Pipeline

on:
  schedule:
    - cron: '20 0,8-23 * * *'   # 00:20, 08:20â€“23:20 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 58  # Prevent workflows from running too long
    env: 
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      PYTHONPATH: .
      # Playwright stability settings for CI
      PLAYWRIGHT_BROWSERS_PATH: /home/runner/.cache/playwright
      NODE_OPTIONS: "--max-old-space-size=4096"
      # Add any other environment variables used in your application
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # remove this line if Playwright is already pinned in requirements.txt

      - name: Determine Playwright version (for cache)
        run: |
          PV=$(python -c "import importlib.metadata as m; print(m.version('playwright'))")
          echo "Playwright $PV"
          echo "PW_VERSION=$PV" >> "$GITHUB_ENV"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PW_VERSION }}

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps chromium

      - name: Print runtime versions
        run: |
          python -m playwright install --with-deps chromium
          
      - name: Run article cleanup pipeline (batched)
        timeout-minutes: 40 
        run: python scripts/cleanup_pipeline_batched.py --batch-size 3 --delay 5 --max-batches 10

      - name: Run article cluster pipeline (CI-optimized)
        timeout-minutes: 15
        run: python scripts/cluster_pipeline_ci.py --max-retries 3
        
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-logs
          path: logs/
          retention-days: 7